version: "3.8"

services:
  # 1) MongoDB
  mongo:
    image: mongo:6
    container_name: convo-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db

  # 2) Mongo Express (optional GUI at http://localhost:8081)
  mongo-express:
    image: mongo-express:latest
    container_name: convo-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      # Disable basic auth for local dev; flip to "true" and add creds if you want protection
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongo

  # 3) Convo Overlay Backend (your Node/TS service)
  overlay:
    # If you have a Dockerfile in ./backend (recommended)
    build: ./backend
    # If you prefer running from a prebuilt image instead, replace ^ with:
    # image: your-org/convo-overlay:latest
    container_name: convo-overlay
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: development
      PORT: 8080

      # Mongo connection the backend will use
      MONGODB_URL: mongodb://mongo:27017
      MONGODB_DBNAME: convo_dev

      # CORS so your Vite dev server can hit /lookup
      CORS_ALLOW_ORIGIN: http://localhost:5173

      # (Optional) constants the service may read
      OVERLAY_TOPIC: tm_ls_convo     # matches your TopicManager constant
      OVERLAY_SERVICE: ls_convo      # matches your LookupService constant
    depends_on:
      - mongo

    # If your backend supports hot-reload (e.g. nodemon, tsx), mount the code:
    volumes:
      - ./backend:/app
      - /app/node_modules

    # Make sure this matches your package.json start script
    # e.g. "start": "node dist/index.js", or "dev": "tsx src/index.ts"
    command: npm run dev
